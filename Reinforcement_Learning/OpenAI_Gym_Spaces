                                                                ##################  SPACES  #################

Spaces are usually used to specify the format of valid actions and observations. Every environment should have the attributes action_space and observation_space, both of which
should be instances of classes that inherit from Space. There are multiple Space types available in Gym:

Box: describes an n-dimensional continuous space. It’s a bounded space where we can define the upper and lower limits which describe the valid values our observations can take.

Discrete: describes a discrete space where {0, 1, …, n-1} are the possible values our observation or action can take. Values can be shifted to {a, a+1, …, a+n-1} using
an optional argument.

Dict: represents a dictionary of simple spaces.

Tuple: represents a tuple of simple spaces.

MultiBinary: creates a n-shape binary space. Argument n can be a number or a list of numbers.

MultiDiscrete: consists of a series of Discrete action spaces with a different number of actions in each element.

>>>from gym.spaces import Box, Discrete, Dict, Tuple, MultiBinary, MultiDiscrete
>>>
>>>observation_space = Box(low=-1.0, high=2.0, shape=(3,), dtype=np.float32)
>>>observation_space.sample()
[ 1.6952509 -0.4399011 -0.7981693]
>>>
>>>observation_space = Discrete(4)
>>>observation_space.sample()
1
>>>
>>>observation_space = Discrete(5, start=-2)
>>>observation_space.sample()
-2
>>>
>>>observation_space = Dict({"position": Discrete(2), "velocity": Discrete(3)})
>>>observation_space.sample()
OrderedDict([('position', 0), ('velocity', 1)])
>>>
>>>observation_space = Tuple((Discrete(2), Discrete(3)))
>>>observation_space.sample()
(1, 2)
>>>
>>>observation_space = MultiBinary(5)
>>>observation_space.sample()
[1 1 1 0 1]
>>>
>>>observation_space = MultiDiscrete([ 5, 2, 2 ])
>>>observation_space.sample()
[3 0 0]